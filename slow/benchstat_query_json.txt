benchstat bench_ncruces_direct.txt bench_ncruces_driver.txt bench_modernc_driver.txt bench_zombiezen_direct.txt bench_mattn_driver.txt bench_tailscale_driver.txt
goos: darwin
goarch: arm64
pkg: github.com/michaellenaghan/go-sqlite-bench
cpu: Apple M2 Pro
              │ bench_ncruces_direct.txt │   bench_ncruces_driver.txt   │     bench_modernc_driver.txt      │     bench_zombiezen_direct.txt      │       bench_mattn_driver.txt       │     bench_tailscale_driver.txt     │
              │          sec/op          │   sec/op     vs base         │   sec/op     vs base              │    sec/op      vs base              │   sec/op     vs base               │   sec/op     vs base               │
Query/JSON-12                9.739m ± 7%   9.932m ± 8%  ~ (p=0.065 n=6)   9.361m ± 2%  -3.89% (p=0.002 n=6)   10.115m ± 11%  +3.86% (p=0.026 n=6)   8.490m ± 2%  -12.82% (p=0.002 n=6)   7.072m ± 2%  -27.39% (p=0.002 n=6)

              │ bench_ncruces_direct.txt │   bench_ncruces_driver.txt    │   bench_modernc_driver.txt    │  bench_zombiezen_direct.txt  │     bench_mattn_driver.txt     │  bench_tailscale_driver.txt   │
              │           B/op           │     B/op      vs base         │     B/op      vs base         │    B/op      vs base         │     B/op       vs base         │     B/op      vs base         │
Query/JSON-12                    0.0 ± ?   64876.5 ± 1%  ? (p=0.002 n=6)   56964.0 ± 0%  ? (p=0.002 n=6)   376.0 ± 97%  ? (p=0.002 n=6)   201028.0 ± 0%  ? (p=0.002 n=6)   32889.0 ± 0%  ? (p=0.002 n=6)

              │ bench_ncruces_direct.txt │    bench_ncruces_driver.txt    │    bench_modernc_driver.txt    │  bench_zombiezen_direct.txt  │     bench_mattn_driver.txt     │   bench_tailscale_driver.txt   │
              │        allocs/op         │   allocs/op    vs base         │   allocs/op    vs base         │  allocs/op   vs base         │   allocs/op    vs base         │   allocs/op    vs base         │
Query/JSON-12                 0.000 ± 0%   4019.000 ± 0%  ? (p=0.002 n=6)   4022.000 ± 0%  ? (p=0.002 n=6)   6.000 ± 50%  ? (p=0.002 n=6)   5021.000 ± 0%  ? (p=0.002 n=6)   2020.000 ± 0%  ? (p=0.002 n=6)
